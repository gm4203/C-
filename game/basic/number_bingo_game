// 숫자 빙고 게임
// 1 ~ 25 숫자 이 숫자를 골고루 섞어서 5 * 5로 출력 
// 플레이어는 숫자를 입력받고 0을 입력하면 게임 종료
// 숫자를 입력받았으면 숫자 목록중 입력 받은 숫자를 찾아서 * 로 만들어준다.
// 숫자를 *로 만든후에 빙고 줄을 체크한다. 빙고 줄이 5줄 이상일 경우 게임을 종료한다 .

#include <iostream>
#include <time.h>
#include <conio.h>
using namespace std;

enum AI_MODE {
    AM_EASY = 1,
    AM_HARD
};

int main() {
    srand((unsigned)time(0));

    int iNumber[25] = {};
    int iAINumber[25] = {};

    for (int i = 0; i < 24; ++i) {
        iNumber[i] = i + 1;
        iAINumber[i] = i + 1;
    }

    int iTemp, idx1, idx2;
    for (int i = 0; i < 100; ++i) {
        idx1 = rand() % 25;
        idx2 = rand() % 25;

        iTemp = iNumber[idx1];
        iNumber[idx1] = iNumber[idx2];
        iNumber[idx2] = iTemp;

        idx1 = rand() % 25;
        idx2 = rand() % 25;

        iTemp = iAINumber[idx1];
        iAINumber[idx1] = iAINumber[idx2];
        iAINumber[idx2] = iTemp;
    }

    int iBingo = 0, iAIBingo = 0;
    int iAIMode;

    while (true) {
        system("cls");
        cout << "1, EASY" << endl;
        cout << "2, HARD" << endl;
        cout << "AI 모드를 선택하세요 : ";

        cin >> iAIMode;

        if (iAIMode >= AM_EASY && iAIMode <= AM_HARD) {
            break;
        }
    }

    int iNoneSelect[25] = {};
    int iNoneSelectCount = 25;

    while (true) {
        system("cls");
        cout << "=============== Player ==============" << endl;
        for (int i = 0; i < 5; ++i) {
            for (int j = 0; j < 5; ++j) {
                if (iNumber[i * 5 + j] == INT_MAX) {
                    cout << "*" << "\t";
                }
                else {
                    cout << iNumber[i * 5 + j] << "\t";
                }
            }
            cout << "\n";
        }
        cout << "Bingo Line : " << iBingo << endl;

        cout << "============== AI ===============" << endl;

        switch (iAIMode) {
        case AM_EASY:
            cout << "AIMode : Easy" << endl;
            break;
        case AM_HARD:
            cout << "AIMode : HARD" << endl;
            break;
        }

        for (int i = 0; i < 5; ++i) {
            for (int j = 0; j < 5; ++j) {
                if (iAINumber[i * 5 + j] == INT_MAX) {
                    cout << "*" << "\t";
                }
                else {
                    cout << iAINumber[i * 5 + j] << "\t";
                }
            }
            cout << endl;
        }

        cout << "AIBingo Line : " << iAIBingo << endl;
        if (iBingo >= 5) {
            cout << "Player 승리" << endl;
            break;
        }

        else if (iAIBingo >= 5) {
            cout << "AI 승리" << endl;
            break;
        }

        cout << "플레이어 입력 : ";
        int iInput;
        bool bAcc = true;
        cin >> iInput;

        if (iInput == 0) {
            cout << "게임 종료";
            break;
        }
        else if (iInput < 0 || iInput > 25) {
            continue;
        }
        else {
            for (int i = 0; i < 25; ++i) {
                if (iInput == iNumber[i]) {
                    bAcc = false;
                    iNumber[i] = INT_MAX;
                    break;
                }
            }
        }
        if (bAcc) {
            continue;
        }

        for (int i = 0; i < 25; ++i) {
            if (iAINumber[i] == iInput) {
                iAINumber[i] == INT_MAX;
                --iNoneSelectCount;
                break;
            }
        }

        switch (iAIMode) {
        case AM_EASY:
            for (int i = 0; i < 25; ++i) {
                if (iAINumber[i] != INT_MAX) {
                    iNoneSelect[iNoneSelectCount] = iAINumber[i];
                    ++iNoneSelectCount;
                }
            }
            iInput = iNoneSelect[rand() % iNoneSelectCount];
            break;
        case AM_HARD:
            break;
        }

        for (int i = 0; i < 25; ++i) {
            if (iNumber[i] == iInput) {
                iNumber[i] = INT_MAX;
                break;
            }
        }

        for (int i = 0; i < 25; ++i) {
            if (iAINumber[i] == iInput) {
                iAINumber[i] = INT_MAX;
                break;
            }
        }

        iBingo = 0;
        iAIBingo = 0;

        int iCheck1 = 0, iCheck2 = 0;
        int iAicheck1 = 0, iAicheck2 = 0;
        for (int i = 0; i < 5; ++i) {
            iCheck1 = iCheck2 = 0;
            iAicheck1 = iAicheck2 = 0;
            for (int j = 0; j < 5; ++j) {
                if (iNumber[i * 5 + j] == INT_MAX) {
                    ++iCheck1;
                }

                if (iNumber[j * 5 + i] == INT_MAX) {
                    ++iCheck2;
                }
                if (iAINumber[i * 5 + j] == INT_MAX)
                    ++iAicheck1;
                if (iAINumber[j * 5 + i] == INT_MAX)
                    ++iAicheck2;
            }
            if (iCheck1 == 5) {
                ++iBingo;
            }
            if (iCheck2 == 5) {
                ++iBingo;
            }
            if (iAicheck1 == 5)
                ++iAIBingo;
            if (iAicheck2 == 5)
                ++iAIBingo;
        }

        iCheck1 = 0;
        iAicheck1 = 0;
        for (int i = 0; i < 25; i += 6) {
            if (iNumber[i] == INT_MAX) {
                ++iCheck1;
            }
            if (iAINumber[i] == INT_MAX) {
                ++iAicheck1;
            }
        }
        if (iCheck1 == 5) {
            iBingo++;
        }
        if (iAicheck1 == 5)
            ++iAIBingo;

        iCheck1 = 0;
        for (int i = 4; i <= 20; i += 4) {
            if (iNumber[i] == INT_MAX) {
                ++iCheck1;
            }
        }
        if (iCheck1 == 5) {
            ++iBingo;
        }

    }
}

